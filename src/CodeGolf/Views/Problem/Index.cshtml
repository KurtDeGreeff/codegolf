@model CodeGolf.ViewModels.ProblemDetails
@{
    ViewData["Title"] = "Code Golf - " + Model.Name;
}

@Html.React("Problem", new
{
    isAuthor = Model.IsAuthor,
    editProblemUrl = Url.Action("Edit", new { id = Model.Id }),
    canAddSolution = Model.Authenticated,
    problemId = Model.Id,
    newSolutionUrl = Url.Action("PostAsync", "Solution"),
    problemUrl = Url.Action("Single", new {id = Model.Id}),
    languageSupportsValidation = Model.Language.CanValidate,
    solutionValidationUrl = Url.Action("ValidateAsync", "Solution"),
    enforceSolutionOutput = Model.EnforceOutput,
    name = Model.Name,
    authorAuthType = "github",
    authorName = Model.Author,
    authorProfileUrl = $"/profile/{Model.Author}",
    language = Model.Language.Name,
    problemDescription = Model.Description,
    testCases = Model.TestCases,
    solutionDataUrl = Url.Action("Solution", new {id = Model.Id}),
    closed = Model.Closed
}, clientOnly: true)

@section scripts {
    <script language="javascript" src="~/lib/moment/moment.min.js"></script>
    <script language="javascript" src="~/lib/highlight.js/lib/highlight.js"></script>
    <script language="javascript" src="~/lib/react/react.min.js"></script>
    <script language="javascript" src="~/lib/react-dom/react-dom.min.js"></script>
    <script language="javascript" src="~/lib/monaco-editor/loader.js"></script>
    <script language="javascript" src="~/js/author-badge.jsx"></script>
    <script language="javascript" src="~/js/monaco-editor.jsx"></script>
    <script language="javascript" src="~/js/solution-editor.jsx"></script>
    <script language="javascript" src="~/js/vote-button.jsx"></script>
    <script language="javascript" src="~/js/solution-list.jsx"></script>
    <script language="javascript" src="~/js/problem.jsx"></script>
    
    @Html.ReactInitJavaScript(true)
}

@section css {
    <link rel="stylesheet" href="~/lib/highlight.js/styles/default.css"/>
}